// Generated by CoffeeScript 1.6.3
(function($) {
  /*
   Focusable jQuery Expression
  */

  var focusable, visible;
  focusable = function(element, isTabIndexNotNaN) {
    var img, map, mapName, nodeName;
    map = void 0;
    mapName = void 0;
    img = void 0;
    nodeName = element.nodeName.toLowerCase();
    if ("area" === nodeName) {
      map = element.parentNode;
      mapName = map.name;
      if (!element.href || !mapName || map.nodeName.toLowerCase() !== "map") {
        return false;
      }
      img = $("img[usemap=#" + mapName + "]")[0];
      return !!img && visible(img);
    }
    return (/input|select|textarea|button|object/.test(nodeName) ? !element.disabled : ("a" === nodeName ? element.href || isTabIndexNotNaN : isTabIndexNotNaN)) && visible(element);
  };
  /*
   Visible Jquery Expression - possible duplication of the existing jQuery lib
  */

  visible = function(element) {
    return $.expr.filters.visible(element) && !$(element).parents().addBack().filter(function() {
      return $.css(this, "visibility") === "hidden";
    }).length;
  };
  /*
   Binding to the ':' Jquery Expression
  */

  $.extend($.expr[":"], {
    data: ($.expr.createPseudo ? $.expr.createPseudo(function(dataName) {
      return function(elem) {
        return !!$.data(elem, dataName);
      };
    }) : function(elem, i, match) {
      return !!$.data(elem, match[3]);
    }),
    focusable: function(element) {
      return focusable(element, !isNaN($.attr(element, "tabindex")));
    },
    tabbable: function(element) {
      var isTabIndexNaN, tabIndex;
      tabIndex = $.attr(element, "tabindex");
      isTabIndexNaN = isNaN(tabIndex);
      return (isTabIndexNaN || tabIndex >= 0) && focusable(element, !isTabIndexNaN);
    }
  });
  return void 0;
})(jQuery);

(function($) {
  /*
  Init
  */

  $(document).on('wb-timerpoke', '.wb-overlay', function(event) {
    var _elm;
    _elm = $(this);
    _elm.data('state', 'initing');
    Modernizr.load([
      {
        load: "site!myscript.js"
      }, {
        complete: function(elm) {
          return _elm._trigger('wb-dependencies-loaded');
        }
      }
    ]);
    return void 0;
  });
  $(document).on('wb-dependencies-loaded', '.wb-overlay', function(event) {
    var _elm;
    _elm = $(this);
    _elm.data('state', 'inited');
    return window._timer.remove('.wb-overlay');
  });
  return window._timer.add('.wb-overlay');
})(jQuery);

(function($) {
  $(document).on('click keypress', '[aria-controls]', function(event) {
    var _elm;
    event.stopPropagation();
    if (event.type === 'keypress' && event.which !== '13') {
      return;
    }
    _elm = $(this);
    $("#" + _elm.attr('aria-controls')).trigger({
      type: 'aria-cntrl-focus',
      trigelm: _elm
    });
    return void 0;
  });
  $(document).on('aria-cntrl-focus', '[aria-hidden]', function(event) {
    var _caller, _elm;
    event.stopPropagation();
    _elm = $(this);
    _caller = event.trigelm;
    _elm.data('trgr-element', _caller);
    switch (_elm.attr('aria-hidden')) {
      case 'true':
        _elm.attr('aria-hidden', 'false');
        _caller.attr('aria-expanded', 'true');
        break;
      case 'false':
        _elm.attr('aria-hidden', 'true');
        _caller.attr('aria-expanded', 'false');
    }
    setTimeout((function() {
      return _elm.find(':tabbable').first().focus();
    }), 1);
    return void 0;
  });
  $(document).on('click', function(event) {
    if ($(event.target).parents('[aria-hidden=false]').length < 1) {
      $('[aria-hidden=false]').each(function() {
        var _elm;
        _elm = $(this);
        _elm.attr('aria-hidden', 'true');
        return _elm.data('trgr-element').attr('aria-expanded', 'false');
      });
    }
    return void 0;
  });
  return void 0;
})(jQuery);
